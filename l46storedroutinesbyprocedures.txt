=>Stored Routines

(i) PROCEDURE (also called Stored PROCEDURE)
    (1) IN = Input Parameters
    (2) Out = Output Parameters
    (3) INOUT = Inout Parameters

(ii) Function
    (1) Builtin Function
    (2) User Define Function
        (a) Input Parameters (Function can be with Parameters or without Parameters / Function always return only 1 value)

-----------------------------------------------------------------------------------------------------------------------

(I) PROCEDURE (also called Stored PROCEDURE)

CREATE TABLE IF NOT EXISTS capitals(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY ,
    date DATE NOT NULL,
    name VARCHAR(15) NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    payment ENUM('MMK','USD') NOT NULL,
    account ENUM('Credit','Debit') NOT NULL
);

DESC capitals;
SHOW CREATE TABLE capitals;
SHOW INDEX FROM capitals;

INSERT INTO capitals (date,name,amount,payment,account)
VALUES ('2024-06-20','Mr Lin',50000,1,1),
('2024-06-21','Mr ZAW',30000,1,1),
('2024-06-21','Mr ZAW',20000,1,1),
('2024-07-1','Mr Lin',1000,2,1),
('2024-07-2','Mr ZAW',3000,2,1),
('2024-7-2','Mr ZAW',1000,2,1),
('2024-7-5','Mr LIN',1000,2,1),
('2024-7-6','Mr LIN',1000,2,1),
('2024-7-10','Mr LIN',20000,1,1);

INSERT INTO capitals (date,name,amount,payment,account)
VALUES ('2024-07-13','Mr ZAW',50000,1,2);

SELECT * FROM  capitals;

=>capitals by MMK

SELECT name,SUM(amount),payment,account FROM capitals
WHERE account = 'Credit' AND payment = 'MMK'
GROUP BY name;

=>capitals by USD

SELECT name,SUM(amount),payment,account FROM capitals
WHERE account = 'Credit' AND payment = 'USD'
GROUP BY name;


CREATE VIEW vw_capitalbymmk AS 
SELECT name,SUM(amount),payment,account FROM capitals
WHERE account = 'Credit' AND payment = 'MMK'
GROUP BY name;

CREATE OR REPLACE VIEW vw_capitalbyusd AS 
SELECT name,SUM(amount),payment,account FROM capitals
WHERE account = 'Credit' AND payment = 'USD'
GROUP BY name;

SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';

SELECT * FROM vw_capitalbymmk;
SELECT * FROM vw_capitalbyusd;

-----------------------------------------------------------------------------------------------------------------------

=>capitals BY account

SELECT date,name,amount,payment,account FROM capitals
WHERE account = "Credit"
ORDER BY date DESC;

SELECT date,name,amount,payment,account FROM capitals
WHERE account = "Debit"
ORDER BY date DESC;


DELIMITER $$

CREATE PROCEDURE  cpreportaccounts_proc(p_acc VARCHAR(10))
    BEGIN
        SELECT date,name,amount,payment,account FROM capitals
        WHERE account = p_acc
        ORDER BY date DESC;
    END $$

DELIMITER   ;

SHOW TABLES;
SHOW FULL TABLES;
SHOW TRIGGERS;

=>SHOW
SHOW PROCEDURE STATUS WHERE DB="myfirstdatabase";

*ERROR
CALL cpreportaccounts_proc();

CALL cpreportaccounts_proc("Credit");
CALL cpreportaccounts_proc("DEBIT");

=>Drop
DROP PROCEDURE IF EXISTS cpreportaccounts_proc;

-----------------------------------------------------------------------------------------------------------------------
=>INPUT 

DELIMITER $$

CREATE PROCEDURE  cpreportpaymentbydate_proc(IN p_date DATE)
    BEGIN
        SELECT date,name,amount,payment,account FROM capitals
        WHERE date = p_date
        ORDER BY date DESC;
    END $$

DELIMITER   ;

SHOW PROCEDURE STATUS WHERE DB="myfirstdatabase";

CALL cpreportpaymentbydate_proc("2024-07-01");
CALL cpreportpaymentbydate_proc("2024-07-10");

-----------------------------------------------------------------------------------------------------------------------

=>INPUT AND OUTPUT Parameters

SELECT * FROM customers;

SELECT COUNT(*) FROM customers
WHERE city = "MANDALAY";

SELECT COUNT(*) FROM customers
WHERE city = "YANGON";

DELIMITER $$

CREATE PROCEDURE  totalcusreportbycity_proc(IN p_city VARCHAR(15), OUT p_totalcount INT)
    BEGIN
        SELECT COUNT(*) INTO p_totalcount FROM customers
        WHERE city = p_city;
    END $$

DELIMITER   ;

SHOW PROCEDURE STATUS WHERE DB="myfirstdatabase";

*ERROR
CALL totalcusreportbycity_proc("MANDALAY");

SET @totalcustomers := 0;

CALL totalcusreportbycity_proc("MANDALAY",@totalcustomers);

SELECT @totalcustomers;

-----------------------------------------------------------------------------------------------------------------------

=>INPUT AND Multi OUTPUT Parameters

SELECT * FROM customers;

SELECT MIN(amount),MAX(amount),city FROM customers
WHERE city = "MANDALAY";

DELIMITER $$

CREATE PROCEDURE   minmaxbycity_proc(IN p_city VARCHAR(15), OUT p_minamount INT, OUT p_maxamount INT)
    BEGIN
        SELECT MIN(amount),MAX(amount) INTO p_minamount, p_maxamount FROM customers
        WHERE city = p_city;
    END $$

DELIMITER   ;

SHOW PROCEDURE STATUS WHERE DB="myfirstdatabase";

SET @minamount := 0;
SET @maxamount := 0;

CALL minmaxbycity_proc("MANDALAY",@minamount,@maxamount);

SELECT @minamount,@maxamount;

SELECT (@maxamount - @minamount) AS differenceamount;

-----------------------------------------------------------------------------------------------------------------------

=>IN / OUT / INOUT

SELECT * FROM customers;

SELECT MIN(age),MAX(age),city FROM customers
WHERE city = "MANDALAY";

DELIMITER $$

CREATE PROCEDURE  minmaxcusagebycity_proc(INOUT p_city VARCHAR(15), OUT p_minage INT, OUT p_maxage INT)
    BEGIN
        SELECT MIN(age),MAX(age) INTO p_minage, p_maxage FROM customers
        WHERE city = p_city;
    END $$

DELIMITER   ;

SET @min := 0;
SET @max := 0;
SET @city := "MANDALAY";

CALL minmaxcusagebycity_proc(@city, @min, @max);

SELECT @city, @min ,@max;