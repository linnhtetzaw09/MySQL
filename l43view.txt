=>VIEW
=>syntax

=CREATE 
CREATE VIEW viewtablename AS 
----Statement

=READ
SELECT col1,col2,col3  FROM viewtablename;

=UPDATE
CREATE OR REPLACE viewtablename AS
------ Statement

=DELETE
DROP VIEW IF EXISTS viewtablename;

--------------------------------------------------------

=>Exercises

CREATE TABLE IF NOT EXISTS shoppers(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(20) NOT NULL,
    phone VARCHAR(15) NOT NULL UNIQUE
);

DESC shoppers;
SHOW CREATE TABLE shoppers;
SHOW INDEX FROM shoppers;

INSERT INTO shoppers(name,phone)
VALUES ('LIN LIN','0911111'),
('LIN HTET','0922222'),
('LIN ZAW','0933333'),
('HTET LIN','0944444'),
('LIN ZAR','0955555'),
('SU SU','0966666'),
('NU NU','0977777'),
('MU MU','0988888'),
('HLA HLA','0999999'),
('MYA MYA','0900000'),
('LIN MU','0912345');

SELECT * FROM shoppers;


CREATE TABLE IF NOT EXISTS products(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(20) NOT NULL UNIQUE,
    price DECIMAL(10,2) NOT NULL
);

DESC products;
SHOW CREATE TABLE products;
SHOW INDEX FROM products;

INSERT INTO products(name,price)
VALUES ('COLA',1600),
('SHARK',900),
('SPONSOR',800),
('WATER',1000),
('DEEDO',1300);

SELECT * FROM products;


CREATE TABLE IF NOT EXISTS checkouts(
    date TIMESTAMP DEFAULT NOW(),
    product_id INT NOT NULL,
    quantity INT NOT NULL,
    total DECIMAL(10,2) NOT NULL,
    payment ENUM('VISA','MPU','COD') NOT NULL,
    shopper_id INT NOT NULL,
    FOREIGN KEY(shopper_id) REFERENCES shoppers(id),
    FOREIGN KEY(product_id) REFERENCES products(id)
);

DESC checkouts;
SHOW CREATE TABLE checkouts;
SHOW INDEX FROM checkouts;

INSERT INTO checkouts (product_id,quantity,total,payment,shopper_id)
VALUES (1,1,1600,1,1),
(1,2,3200,1,2),
(2,3,2400,3,2),
(3,2,1800,2,3),
(4,1,1300,1,4),
(5,4,4000,2,4),
(1,2,3200,3,5),
(1,1,1600,2,3),
(3,4,3600,2,5),
(1,3,4800,1,5);

SELECT * FROM shoppers;
SELECT * FROM products;
SELECT * FROM checkouts;


---------------------------------------------------------------------------

=>AS Statement

CREATE TABLE IF NOT EXISTS newtablename
SELECT col1,col2,col3 FROM existingtablename;

CREATE TABLE IF NOT EXISTS newtablename AS
SELECT col1,col2,col3 FROM existingtablename;

SELECT * FORM checkouts
WHERE payment = 'COD';

=>copy table by AS
CREATE TABLE IF NOT EXISTS checkoutbycod AS
SELECT * FROM checkouts
WHERE payment = 'COD';

DESC checkoutbycod;
SHOW CREATE TABLE checkoutbycod;
SELECT * FROM checkoutbycod;


SELECT product_id,quantity,total,payment FORM checkouts
WHERE payment = 'MPU';

=>copy table by AS
CREATE TABLE IF NOT EXISTS checkoutbympu AS
SELECT * FROM checkouts
WHERE payment = 'MPU';

DESC checkoutbympu;
SHOW CREATE TABLE checkoutbympu;
SELECT * FROM checkoutbympu;

---------------------------------------------------------------------------

=>VIEW table

SELECT payment,SUM(total) AS totalamount FROM checkouts
GROUP BY payment ORDER BY payment DESC;

CREATE VIEW vw_paymentreport AS
SELECT payment,SUM(total) AS totalamount FROM checkouts
GROUP BY payment ORDER BY payment DESC;

=>List all table
SHOW TABLES;
SHOW FULL TABLES;
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'BASE TABLE';
SHOW FULL TABLES IN myfirstdatabase WHERE TABLE_TYPE LIKE 'BASE TABLE';

SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';
SHOW FULL TABLES IN myfirstdatabase WHERE TABLE_TYPE LIKE 'VIEW';


SELECT * FROM checkouts;
SELECT * FROM vw_paymentreport;

INSERT INTO checkouts (product_id,quantity,total,payment,shopper_id)
VALUES (5,3,3000,1,3),
(5,2,2000,3,2);

SELECT * FROM checkouts;
SELECT * FROM vw_paymentreport;
SELECT * FROM checkoutbycod;
SELECT * FROM checkoutbympu;

=>DROP VIEW
DROP VIEW  IF EXISTS vw_paymentreport;

SELECT * FROM vw_paymentreport;
SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';


---------------------------------------------------------------------------


